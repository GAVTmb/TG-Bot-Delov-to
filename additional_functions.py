from aiogram import Bot, types
from pyexpat.errors import messages
import datetime

from sqlalchemy.ext.asyncio import AsyncSession

from database.orm_admin_table_queries import orm_get_admin
from database.orm_worker_table_queries import orm_get_all_tg_id_workers
from database.orm_working_shift_table_queries import orm_get_all_working_shifts
from keyboards.inline_kb import get_callback_buts


async def generation_text_shifts_workers(working_shift):
    text = (f"–î–∞—Ç–∞üìÜ: {working_shift.date_time_working_shift.strftime("%d.%m.20%y")}\n"
            f"–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞‚åö: {working_shift.date_time_working_shift.strftime("%H:%M")}\n"
            f"–ê–¥—Ä–µ—Åüè†: {working_shift.address}\n"
            f"–û–ø–∏—Å–∞–Ω–∏–µ: {working_shift.description_working_shift}\n"
            f"–ù—É–∂–Ω–æ {working_shift.quantity_workers} —á–µ–ª.\n"
            f"–û–ø–ª–∞—Ç–∞: {working_shift.cost_work}—Ä—É–±.")
    return text


async def sending_shifts_workers(session: AsyncSession, bot):
    list_tg_id_workers = await orm_get_all_tg_id_workers(session)
    list_working_shift = await orm_get_all_working_shifts(session)
    working_shift = list_working_shift[-1]
    admin = await orm_get_admin(session, str(working_shift.tg_id_admin))
    text = await generation_text_shifts_workers(working_shift)

    for tg_id_worker in list_tg_id_workers:
        await bot.send_message(int(tg_id_worker), f"‚ùó‚ùó‚ùó –ù–æ–≤–∞—è —Å–º–µ–Ω–∞ ‚ùó‚ùó‚ùó\n"
                                                  f"–î–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º!\n"
                                                  f"{admin.name} - ‚òé+7{admin.phone_number}",
                               reply_markup=get_callback_buts(buts={"‚úÖ–ï–¥—É –Ω–∞ —Å–º–µ–Ω—É": f"yes_{working_shift.id}",
                                                                    "‚ùå–ù–µ –º–æ–≥—É": f"no_{working_shift.id}"},
                                                              sizes=(2, ))
                               )




